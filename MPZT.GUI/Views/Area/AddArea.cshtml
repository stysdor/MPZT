@model MPZT.GUI.Models.AreaModel

<div class="panel panel-primary">
    <div class="panel-heading">
        Dodaj plan tworzenia miejscowego planu zagospodarowania terenu:
    </div>
    <div class="panel-body">
        @using (var form = Html.BeginForm("AddArea", "Area", FormMethod.Post))
        {
            @Html.HiddenFor(x => x.Id)
            <div class="form-group row">
                @Html.LabelFor(x => x.Name, new { @class = "col-sm-2 col-form-label" })
                <div class="col-sm-10">
                    @Html.TextBoxFor(x => x.Name, new { @class = "form-control col-sm" })
                    @Html.ValidationMessageFor(x => x.Name, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(x => x.ConsultationTime, new { @class = "col-sm-2 col-form-label" })
                <div class="col-sm-10">
                    @Html.TextBoxFor(x => x.ConsultationTime, new { @class = "form-control col-sm", @type = "datetime-local"})
                    @Html.ValidationMessageFor(x => x.ConsultationTime, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(x => x.ExpirationDate, new { @class = "col-sm-2 col-form-label" })
                <div class="col-sm-10">
                    @Html.TextBoxFor(x => x.ExpirationDate, new { @class = "form-control col-sm", @type = "date" })
                    @Html.ValidationMessageFor(x => x.ExpirationDate, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(x => x.PhaseId, new { @class = "col-sm-2 col-form-label" })
                <div class="col-sm-10">
                    @Html.DropDownListFor(x => x.PhasePhase ,new SelectList(Enum.GetValues(typeof(MPZT.GUI.Models.AreaModel.Phase))),"Wybierz fazę", new { @class = "form-control col-sm" })
                    @Html.ValidationMessageFor(x => x.PhaseId, null, new { @class = "text-danger" })
                </div>
            </div>

            <hr />
            @Html.EditorFor(x => x.Location)
            <hr />
            <div>
                @Html.LabelFor(x => x.GeoPoints, new { @class = "col-sm-2 col-form-label" })
                
                <table class="table">
                    <thead>
                        @if (Model.GeoPoints.Count > 0)
                        {
                            <tr>
                                <td class="col-4">Szerokość geograficzna E</td>
                                <td class="col-4">Długość geograficzna N</td>
                                <td class="col-4"></td>
                            </tr>
                        }
                        </thead>
                       
                    <tbody id="geopoints">
                        @foreach (var geopoint in Model.GeoPoints)
                        {
                            @Html.Partial("_GeoPoint", geopoint)
                        }
                    </tbody>
                </table>
                <button id="add" class="btn btn-primary" type="button">Dodaj wpółrzędne</button>
            </div>

            <div class="row">
                <div class="col-sm-12">
                    <button class="btn btn-primary pull-right" type="submit">Dodaj</button>
                </div>
            </div>
        }

    </div>
</div>

<script type="text/javascript">
    var url = '@Url.Action("GeoPoint")';
    var form = $('form');
    var geopoints = $('#geopoints');
    $('#add').click(function () {
        $.get(url, function (response) {
            geopoints.append(response);
            form.data('validator', null);
            $.validator.unobtrusive.parse(form);
        });
    });
</script>



